<?php

// Global items count.
$altpager_page_count = 0;

/**
 * Implements hook_theme().
 */
function altpager_theme() {
  return array(
    'altpager' => array(
      'variables' => array(
        'total' => 0,
        'items' => '',
      ),
      'template' => 'altpager',
    ),
    'altpager_link' => array(
      'variables' => array(
        'count' => 0,
        'title' => '',
      ),
    ),
  );
}

/**
 * Default items count pager.
 *
 * @return array
 *   Array list items.
 */
function altpager_default_items() {
  global $altpager_page_count;

  return array(
    10 => 10,
    20 => 20,
    50 => 50,
    100 => 100,
    200 => 200,
    400 => 400,
    600 => 600,
    $altpager_page_count => $altpager_page_count,
  );
}

/**
 * Count items viewed in current page.
 *
 * @return int|mixed
 *   Count page viewed.
 */
function altpager_count_items() {
  global $altpager_page_count;

  $default_items = altpager_default_items();
  $min_count_items = key($default_items);

  $count = isset($_GET['apcount']) ? (int) $_GET['apcount'] : $min_count_items;

  if ($count > $altpager_page_count || $count < 0) {
    $count = $altpager_page_count;
  }

  if (!in_array($count, $default_items)) {
    $count = $min_count_items;
  }

  return $count;
}

/*
 * Process variables for altpager.tpl.php.
 *
 * The $variables array contains the following arguments:
 * - $total: Count all items.
 * - $items: Items for output.
 *
 * @see altpager.tpl.php
 */
function template_preprocess_altpager(&$variables) {
  global $altpager_page_count;

  drupal_add_css(drupal_get_path('module', 'altpager') . '/altpager.css');

  $variables['items'] = '';
  $items = altpager_default_items();
  $min_count = key($items);

  if ($altpager_page_count > $min_count) {
    foreach ($items as $count => $title) {
      if ($count <= $altpager_page_count) {
        $variables['items'] .= theme('altpager_link', array(
          'count' => $count,
          'title' => $title,
        ));
      }
    }
  }

  $variables['total'] = $altpager_page_count;
}

/**
 * Link theme.
 *
 * @param $variables
 *   An associative array containing:
 *   - count: Count items viewed.
 *   - text: Item title.
 *
 * @return string
 *   Link.
 */
function theme_altpager_link($variables) {
  $query = array();
  $query['apcount'] = $variables['count'];

  $querystring = drupal_get_query_parameters($_GET, array_merge(array('q', 'apcount', 'pass'), array_keys($_COOKIE)));

  if (!empty($querystring)) {
    $query = array_merge($querystring, $query);
  }

  $count_items = altpager_count_items();

  if ($count_items == $variables['count']) {
    $output = '<li class="active">' . $variables['title'] . '</li>';
  }
  else {
    $output = '<li>' . l($variables['title'], $_GET['q'], array('query' => $query)) . '</li>';
  }

  return $output;
}

/**
 * Query extender for pager queries.
 */
class AltPager extends SelectQueryExtender {

  public function __construct(SelectQueryInterface $query, DatabaseConnection $connection) {
    parent::__construct($query, $connection);

    $this->addTag('altpager');
  }

  /**
   * Override the execute method.
   *
   * Before we run the query, we need to add pager-based range() instructions
   * to it.
   */
  public function execute() {
    global $altpager_page_count;

    $altpager_page_count = $this
      ->query
      ->countQuery()
      ->execute()
      ->fetchField();

    $count_items = altpager_count_items();

    $this->range(0, $count_items);

    return $this->query->execute();
  }
}
